---
swagger: "2.0"
info:
  description: Api Documentation
  version: "1.0"
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:9001
basePath: /
tags:
- name: basic-error-controller
  description: Basic Error Controller
- name: blogs-controller
  description: Blogs Controller
- name: operation-handler
  description: Operation Handler
- name: web-mvc-links-handler
  description: Web Mvc Links Handler
paths:
  /actuator:
    get:
      tags:
      - web-mvc-links-handler
      summary: links
      operationId: linksUsingGET
      produces:
      - application/vnd.spring-boot.actuator.v3+json
      - application/json
      - application/vnd.spring-boot.actuator.v2+json
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                $ref: '#/definitions/Link'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /actuator/health:
    get:
      tags:
      - operation-handler
      summary: handle
      operationId: handleUsingGET_1
      produces:
      - application/vnd.spring-boot.actuator.v3+json
      - application/json
      - application/vnd.spring-boot.actuator.v2+json
      parameters:
      - in: body
        name: body
        description: body
        required: false
        schema:
          type: object
          additionalProperties:
            type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /actuator/health/**:
    get:
      tags:
      - operation-handler
      summary: handle
      operationId: handleUsingGET
      produces:
      - application/vnd.spring-boot.actuator.v3+json
      - application/json
      - application/vnd.spring-boot.actuator.v2+json
      parameters:
      - in: body
        name: body
        description: body
        required: false
        schema:
          type: object
          additionalProperties:
            type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /error:
    get:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    head:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    options:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      tags:
      - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
      - application/json
      produces:
      - text/html
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /v1/blogs/all:
    get:
      tags:
      - blogs-controller
      summary: getAllBlogs
      operationId: getAllBlogsUsingGET
      produces:
      - '*/*'
      parameters: []
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Blogs'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /v1/blogs/author/{author}:
    get:
      tags:
      - blogs-controller
      summary: getBlogIdsByAuthor
      operationId: getBlogIdsByAuthorUsingGET
      produces:
      - '*/*'
      parameters:
      - name: author
        in: path
        description: author
        required: true
        type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - blogs-controller
      summary: postBlogByAuthor
      operationId: postBlogByAuthorUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: author
        in: path
        description: author
        required: true
        type: string
      - in: body
        name: requestBlog
        description: requestBlog
        required: true
        schema:
          $ref: '#/definitions/Blogs'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - blogs-controller
      summary: deleteBlogsByAuthor
      operationId: deleteBlogsByAuthorUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: author
        in: path
        description: author
        required: true
        type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /v1/blogs/blog/{blogid}:
    get:
      tags:
      - blogs-controller
      summary: getBlogById
      operationId: getBlogByIdUsingGET
      produces:
      - '*/*'
      parameters:
      - name: blogid
        in: path
        description: blogid
        required: true
        type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BlogsEntity'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /v1/blogs/blog/{blogid}/comment:
    put:
      tags:
      - blogs-controller
      summary: addCommentToBlog
      operationId: addCommentToBlogUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: blogid
        in: path
        description: blogid
        required: true
        type: string
      - in: body
        name: comments
        description: comments
        required: true
        schema:
          $ref: '#/definitions/Comments'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /v1/blogs/blog/{blogid}/comment/{commentid}:
    delete:
      tags:
      - blogs-controller
      summary: deleteCommentById
      operationId: deleteCommentByIdUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: blogid
        in: path
        description: blogid
        required: true
        type: string
      - name: commentid
        in: path
        description: commentid
        required: true
        type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /v1/blogs/blog/{blogid}/interaction:
    put:
      tags:
      - blogs-controller
      summary: updateInteractionToBlog
      operationId: updateInteractionToBlogUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: blogid
        in: path
        description: blogid
        required: true
        type: string
      - in: body
        name: interaction
        description: interaction
        required: true
        schema:
          $ref: '#/definitions/Interaction'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /v1/blogs/blog/{id}:
    put:
      tags:
      - blogs-controller
      summary: updateBlogById
      operationId: updateBlogByIdUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
      - in: body
        name: requestBlog
        description: requestBlog
        required: true
        schema:
          $ref: '#/definitions/Blogs'
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - blogs-controller
      summary: deleteBlogById
      operationId: deleteBlogByIdUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
      deprecated: false
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
definitions:
  Blogs:
    type: object
    properties:
      blogAuthor:
        type: string
      blogCreationDate:
        type: string
      blogId:
        type: string
      blogTags:
        type: array
        items:
          type: string
      blogText:
        type: string
      blogTitle:
        type: string
      comments:
        type: array
        items:
          $ref: '#/definitions/Comments'
      likeInteractionIds:
        type: array
        items:
          type: string
      likesCount:
        type: string
      rating:
        type: string
      ratingInteractionIds:
        type: array
        items:
          type: string
      reportSpam:
        type: boolean
      reportSpamInteractionIds:
        type: array
        items:
          type: string
    title: Blogs
  BlogsEntity:
    type: object
    properties:
      blogAuthor:
        type: string
      blogCreationDate:
        type: string
      blogId:
        type: string
      blogTags:
        type: array
        items:
          type: string
      blogText:
        type: string
      blogTitle:
        type: string
      comments:
        type: array
        items:
          $ref: '#/definitions/Comments'
      likeInteractionIds:
        type: array
        items:
          type: string
      likesCount:
        type: integer
        format: int32
      rating:
        type: integer
        format: int32
      ratingInteractionIds:
        type: array
        items:
          type: string
      reportSpam:
        type: boolean
      reportSpamInteractionIds:
        type: array
        items:
          type: string
    title: BlogsEntity
  Comments:
    type: object
    properties:
      commentAuthor:
        type: string
      commentCreationDate:
        type: string
      commentId:
        type: string
      commentText:
        type: string
    title: Comments
  Interaction:
    type: object
    properties:
      interactionId:
        type: string
      interactionType:
        type: string
      interactionValue:
        type: string
    title: Interaction
  Link:
    type: object
    properties:
      href:
        type: string
      templated:
        type: boolean
    title: Link
  Map«string,Link»:
    type: object
    title: "Map«string,Link»"
    additionalProperties:
      $ref: '#/definitions/Link'
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
        properties: {}
      modelMap:
        type: object
        additionalProperties:
          type: object
          properties: {}
      reference:
        type: boolean
      status:
        type: string
        enum:
        - 100 CONTINUE
        - 101 SWITCHING_PROTOCOLS
        - 102 PROCESSING
        - 103 CHECKPOINT
        - 200 OK
        - 201 CREATED
        - 202 ACCEPTED
        - 203 NON_AUTHORITATIVE_INFORMATION
        - 204 NO_CONTENT
        - 205 RESET_CONTENT
        - 206 PARTIAL_CONTENT
        - 207 MULTI_STATUS
        - 208 ALREADY_REPORTED
        - 226 IM_USED
        - 300 MULTIPLE_CHOICES
        - 301 MOVED_PERMANENTLY
        - 302 FOUND
        - 302 MOVED_TEMPORARILY
        - 303 SEE_OTHER
        - 304 NOT_MODIFIED
        - 305 USE_PROXY
        - 307 TEMPORARY_REDIRECT
        - 308 PERMANENT_REDIRECT
        - 400 BAD_REQUEST
        - 401 UNAUTHORIZED
        - 402 PAYMENT_REQUIRED
        - 403 FORBIDDEN
        - 404 NOT_FOUND
        - 405 METHOD_NOT_ALLOWED
        - 406 NOT_ACCEPTABLE
        - 407 PROXY_AUTHENTICATION_REQUIRED
        - 408 REQUEST_TIMEOUT
        - 409 CONFLICT
        - 410 GONE
        - 411 LENGTH_REQUIRED
        - 412 PRECONDITION_FAILED
        - 413 PAYLOAD_TOO_LARGE
        - 413 REQUEST_ENTITY_TOO_LARGE
        - 414 URI_TOO_LONG
        - 414 REQUEST_URI_TOO_LONG
        - 415 UNSUPPORTED_MEDIA_TYPE
        - 416 REQUESTED_RANGE_NOT_SATISFIABLE
        - 417 EXPECTATION_FAILED
        - 418 I_AM_A_TEAPOT
        - 419 INSUFFICIENT_SPACE_ON_RESOURCE
        - 420 METHOD_FAILURE
        - 421 DESTINATION_LOCKED
        - 422 UNPROCESSABLE_ENTITY
        - 423 LOCKED
        - 424 FAILED_DEPENDENCY
        - 425 TOO_EARLY
        - 426 UPGRADE_REQUIRED
        - 428 PRECONDITION_REQUIRED
        - 429 TOO_MANY_REQUESTS
        - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
        - 451 UNAVAILABLE_FOR_LEGAL_REASONS
        - 500 INTERNAL_SERVER_ERROR
        - 501 NOT_IMPLEMENTED
        - 502 BAD_GATEWAY
        - 503 SERVICE_UNAVAILABLE
        - 504 GATEWAY_TIMEOUT
        - 505 HTTP_VERSION_NOT_SUPPORTED
        - 506 VARIANT_ALSO_NEGOTIATES
        - 507 INSUFFICIENT_STORAGE
        - 508 LOOP_DETECTED
        - 509 BANDWIDTH_LIMIT_EXCEEDED
        - 510 NOT_EXTENDED
        - 511 NETWORK_AUTHENTICATION_REQUIRED
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
